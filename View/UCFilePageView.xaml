<UserControl x:Class="UI.Code.View.UCFilePageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UI.Code.View"
             xmlns:control="clr-namespace:UI.Code.Controls"
              xmlns:mvvmhelper="clr-namespace:UI.Code.Model"
            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
            xmlns:con="clr-namespace:UI.Code.Convertor"
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
              xmlns:v="clr-namespace:UI.Code.View"
              xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="True" 
            >
    <UserControl.Resources>
        <con:ColorErrorConverter x:Key="err"></con:ColorErrorConverter>
        <con:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></con:BooleanToVisibilityConverter>
        <con:TreeViewLineConverter x:Key="LineConverter"/>

        <!-- Toggle Button -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                            <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                                <Rectangle.Fill>

                                    <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="Silver" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                            <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="IsExpanded" Value="True" />
            <EventSetter Event="MouseDoubleClick" Handler="MyTreeView_PreviewMouseDoubleClick" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>


                            <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#DCDCDC" SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="VerLn" Width="1" Stroke="#DCDCDC" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true" Fill="White"/>
                            <ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>


                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                <Setter TargetName="VerLn" Property="Height" Value="9"/>
                                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Grid Name="mainGrid2" >

        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
               
            </Grid.ColumnDefinitions>
            
            <Grid  Background="White" Grid.Row="1"  Grid.Column="0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    
                </Grid.RowDefinitions>

                <Grid x:Name="operation" >
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
                        <!--<Button  Grid.Column="0" x:Name="btnBack" Margin="0,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Left" 
  Style="{StaticResource ImgBtn}"
  ToolTip="Back">
                        <materialDesign:PackIcon  Foreground="White"
    Kind="ArrowBack"
    />
                    </Button>-->
                        <!--<TextBox Margin="0,5" Width="200" Text="{Binding SearchTree}"  Background="White" Name="txtNodeSearch"
  materialDesign:HintAssist.Hint="Search by name"  
                        materialDesign:TextFieldAssist.TextBoxViewMargin="1 12 1 0"
                        materialDesign:HintAssist.FloatingScale="0.90"
  Style="{StaticResource MaterialDesignOutlinedTextBox}"   FontSize="12"
  VerticalAlignment="Center" />-->
                        <TextBox Margin="20,20,0,0" Visibility="Collapsed" VerticalAlignment="Center" Text="{Binding SearchTree}"
  x:Name="txtNodeSearch" Width="200" 
  materialDesign:HintAssist.Hint="Search by name"
  materialDesign:HintAssist.HelperText="" />
                        <StackPanel Orientation="Horizontal" >
                            <Button HorizontalAlignment="Right" Visibility="Collapsed" Click="op_btnEdit_Click"   VerticalAlignment="Center"
  Style="{StaticResource ImgBtn}" Margin="5" Name="op_btnEdit" Command="{Binding SearcTreeCommand}"
  ToolTip="Search">
                                <materialDesign:PackIcon Background="Transparent"
    Kind="Search"
    
     />
                            </Button>
                            <Button  HorizontalAlignment="Right"  Visibility="Collapsed"    Click="op_btnDelete_Click"   VerticalAlignment="Center"
  Style="{StaticResource ImgBtn}" Margin="5"   Name="op_btnDelete"  Command="{Binding RefreshTreeCommand}"
  ToolTip="Refresh">
                                <materialDesign:PackIcon Background="Transparent"
    Kind="Refresh"
    
     />
                            </Button>
                            <Button HorizontalAlignment="Left"     x:Name="Op_AddNode" Click="Op_AddNode_Click" VerticalAlignment="Center"
  Style="{StaticResource ImgBtn}" Margin="5" 
  ToolTip="Add">
                                <materialDesign:PackIcon Background="Transparent"
    Kind="PlusCircle"
    
     />
                            </Button>

                        </StackPanel>



                    </StackPanel>

                </Grid>
                <!--<ScrollViewer Name="scroll1" Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >-->
                <TreeView   Grid.Row="1" Width="300" VirtualizingStackPanel.IsVirtualizing="False" mvvmhelper:TreeViewExtension.SelectItemOnRightClick="true"  VerticalAlignment="Stretch"    SelectedItemChanged="tree_SelectedItemChanged" HorizontalAlignment="Left" Margin="0,0,0,0"   ItemsSource="{Binding TreeItems,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Name="tree" >

                        <TreeView.Resources>




                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                      Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Green" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="White" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="White" />
                        <ContextMenu x:Key="ChildContextMenu">
                            <MenuItem Header="Add" IsEnabled="{Binding IsLock}"  Click="Add_Click"/>
                            <MenuItem Header="Edit" Click="Edit_Click"/>
                            <MenuItem Header="Delete" Click="Delete_Click"/>
                        </ContextMenu>
                    </TreeView.Resources>


                       

                        <TreeView.ItemTemplate>
                            <!--<HierarchicalDataTemplate  ItemsSource="{Binding NodeItem}">
                            <TextBlock Text="{Binding NodeTitle}" Padding="3,0,3,0" Margin="5,0,0,0"/>
                        </HierarchicalDataTemplate>-->
                            <HierarchicalDataTemplate 
                              ItemsSource="{Binding Path=NodeItem}">
                                <StackPanel Orientation="Horizontal" Margin="1">
                                    <StackPanel.Children>
                                        <Image>
                                            <Image.Style>
                                                <Style BasedOn="{StaticResource IconImageStyleSmall}" TargetType="Image">
                                                    <Setter Property="Source" Value="{Binding Source={StaticResource Icon_FolderClosed}, Mode=OneTime}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                                                            <Setter Property="Source" Value="{Binding Source={StaticResource Icon_FolderOpen}, Mode=OneTime}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    <TextBlock FontWeight="Normal" Margin="5" Foreground="Black" FontSize="16" Text="{Binding NodeTitle}" ContextMenu="{StaticResource ChildContextMenu}"/>
                                    </StackPanel.Children>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>


                        <!--<TreeViewItem
    Header="Fruit">
                        <TreeViewItem>
                            <TreeViewItem.Header>
                                <StackPanel
          Orientation="Horizontal">
                                    <Viewbox
            Width="16"
            Height="16">
                                        <Canvas
              Width="24"
              Height="24">
                                            <Path
                Data="M20,10C22,13 17,22 15,22C13,22 13,21 12,21C11,21 11,22 9,22C7,22 2,13 4,10C6,7 9,7 11,8V5C5.38,8.07 4.11,3.78 4.11,3.78C4.11,3.78 6.77,0.19 11,5V3H13V8C15,7 18,7 20,10Z"
                Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock
            Margin="8 0 0 0">
          Apple
                                    </TextBlock>
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                        <TreeViewItem
      Header="Banana" />
                        <TreeViewItem
      Header="Grape">
                            <TextBlock>
        <Run
          Text="Grapes for us" />
                            </TextBlock>
                        </TreeViewItem>
                        <TreeViewItem
      Header="Peach" />
                        <TreeViewItem
      Header="Pear" />
                        <TreeViewItem
      Header="Strawberry" />
                    </TreeViewItem>
                    <TreeViewItem
    Header="OS"
    IsExpanded="True">
                        <TreeViewItem
      Header="Amiga" />
                        <TreeViewItem>
                            <TreeViewItem.Header>
                                <StackPanel
          Orientation="Horizontal">
                                    <Viewbox
            Width="16"
            Height="16">
                                        <Canvas
              Width="24"
              Height="24">
                                            <Path
                Data="M15,5H14V4H15M10,5H9V4H10M15.53,2.16L16.84,0.85C17.03,0.66 17.03,0.34 16.84,0.14C16.64,-0.05 16.32,-0.05 16.13,0.14L14.65,1.62C13.85,1.23 12.95,1 12,1C11.04,1 10.14,1.23 9.34,1.63L7.85,0.14C7.66,-0.05 7.34,-0.05 7.15,0.14C6.95,0.34 6.95,0.66 7.15,0.85L8.46,2.16C6.97,3.26 6,5 6,7H18C18,5 17,3.25 15.53,2.16M20.5,8A1.5,1.5 0 0,0 19,9.5V16.5A1.5,1.5 0 0,0 20.5,18A1.5,1.5 0 0,0 22,16.5V9.5A1.5,1.5 0 0,0 20.5,8M3.5,8A1.5,1.5 0 0,0 2,9.5V16.5A1.5,1.5 0 0,0 3.5,18A1.5,1.5 0 0,0 5,16.5V9.5A1.5,1.5 0 0,0 3.5,8M6,18A1,1 0 0,0 7,19H8V22.5A1.5,1.5 0 0,0 9.5,24A1.5,1.5 0 0,0 11,22.5V19H13V22.5A1.5,1.5 0 0,0 14.5,24A1.5,1.5 0 0,0 16,22.5V19H17A1,1 0 0,0 18,18V8H6V18Z"
                Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock
            Margin="8 0 0 0">
          Android
                                    </TextBlock>
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                        <TreeViewItem
      Header="iOS" />
                        <TreeViewItem>
                            <TreeViewItem.Header>
                                <StackPanel
          Orientation="Horizontal">
                                    <Viewbox
            Width="16"
            Height="16">
                                        <Canvas
              Width="24"
              Height="24">
                                            <Path
                Data="M13.18,14.5C12.53,15.26 11.47,15.26 10.82,14.5L7.44,10.5C7.16,11.28 7,12.12 7,13C7,14.67 7.57,16.18 8.5,17.27C10,17.37 11.29,17.96 11.78,19C11.85,19 11.93,19 12.22,19C12.71,18 13.95,17.44 15.46,17.33C16.41,16.24 17,14.7 17,13C17,12.12 16.84,11.28 16.56,10.5L13.18,14.5M20,20.75C20,21.3 19.3,22 18.75,22H13.25C12.7,22 12,21.3 12,20.75C12,21.3 11.3,22 10.75,22H5.25C4.7,22 4,21.3 4,20.75C4,19.45 4.94,18.31 6.3,17.65C5.5,16.34 5,14.73 5,13C4,15 2.7,15.56 2.09,15C1.5,14.44 1.79,12.83 3.1,11.41C3.84,10.6 5,9.62 5.81,9.25C6.13,8.56 6.54,7.93 7,7.38V7A5,5 0 0,1 12,2A5,5 0 0,1 17,7V7.38C17.46,7.93 17.87,8.56 18.19,9.25C19,9.62 20.16,10.6 20.9,11.41C22.21,12.83 22.5,14.44 21.91,15C21.3,15.56 20,15 19,13C19,14.75 18.5,16.37 17.67,17.69C19.05,18.33 20,19.44 20,20.75M9.88,9C9.46,9.5 9.46,10.27 9.88,10.75L11.13,12.25C11.54,12.73 12.21,12.73 12.63,12.25L13.88,10.75C14.29,10.27 14.29,9.5 13.88,9H9.88M10,5.25C9.45,5.25 9,5.9 9,7C9,8.1 9.45,8.75 10,8.75C10.55,8.75 11,8.1 11,7C11,5.9 10.55,5.25 10,5.25M14,5.25C13.45,5.25 13,5.9 13,7C13,8.1 13.45,8.75 14,8.75C14.55,8.75 15,8.1 15,7C15,5.9 14.55,5.25 14,5.25Z"
                Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock
            Margin="8 0 0 0">
          Linux
                                    </TextBlock>
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                        <TreeViewItem>
                            <TreeViewItem.Header>
                                <StackPanel
          Orientation="Horizontal">
                                    <Viewbox
            Width="16"
            Height="16">
                                        <Canvas
              Width="24"
              Height="24">
                                            <Path
                Data="M3,12V6.75L9,5.43V11.91L3,12M20,3V11.75L10,11.9V5.21L20,3M3,13L9,13.09V19.9L3,18.75V13M20,13.25V22L10,20.09V13.1L20,13.25Z"
                Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock
            Margin="8 0 0 0">
          Windows
                                    </TextBlock>
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                    </TreeViewItem>
                    <TreeViewItem
    Header="Empty" />-->
                    </TreeView>

                <!--</ScrollViewer>-->
            
            </Grid>
            
            <Grid Grid.Row="2" Grid.ColumnSpan="2">
                <TextBlock Margin="5"></TextBlock>
            </Grid>
        </Grid>
        <Border Panel.ZIndex="1000" Style="{StaticResource brdProgress}" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" >
            <control:progress></control:progress>
        </Border>
        <xctk:ChildWindow Padding="20" Panel.ZIndex="1"   CloseButtonVisibility="Collapsed"  BorderThickness="0"    WindowBorderBrush="White" Visibility="Collapsed"   Name="childWindowAddEdit" WindowStartupLocation="Center" IsModal="True"    WindowState="Open"
                   
                    >


            <StackPanel Margin="20">
                <TextBlock FontWeight="Bold" FontSize="14" Margin="0,5" Name="txtTitle"></TextBlock>
                <TextBox Margin="5" Width="200" Name="txtNodeTitle"
  materialDesign:HintAssist.Hint="Name" Text=""
                        materialDesign:TextFieldAssist.TextBoxViewMargin="1 12 1 0"
                        materialDesign:HintAssist.FloatingScale="0.90"
  Style="{StaticResource MaterialDesignOutlinedTextBox}"   FontSize="12"
  VerticalAlignment="Center" />
                <TextBlock Foreground="Red" Name="txtError"></TextBlock>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                    <Button   HorizontalAlignment="Center" Margin="10" Name="btnAddEdit" Click="btnAddEdit_Click"
    Style="{StaticResource btn}"
    ToolTip="Save">
                        Save
                    </Button>
                    <Button   HorizontalAlignment="Center" Margin="10" Name="btnAddEditClose" Click="btnAddEditClose_Click"
    Style="{StaticResource btn}"
    ToolTip="Close">
                        Close
                    </Button>
                </StackPanel>

            </StackPanel>

        </xctk:ChildWindow>
        <xctk:ChildWindow Padding="20"  Panel.ZIndex="1" CloseButtonVisibility="Collapsed"  BorderThickness="0"    WindowBorderBrush="White" Visibility="Collapsed"   Name="childWindowTreeMessageBox" WindowStartupLocation="Center" IsModal="True"    WindowState="Open"
                   
                    >


            <StackPanel Margin="20">
                <TextBlock Style="{StaticResource Title}" Foreground="Black"  Text="{Binding Status}"  Margin="5"  ></TextBlock>

                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">

                    <TextBlock Margin="5" Foreground="Black" FontWeight="Bold"  FontSize="14" Text="{Binding Message}"></TextBlock>
                    <Button   HorizontalAlignment="Center" Margin="10" Name="btnTreeErrorMsgClose" Click="btnTreeErrorMsgClose_Click"
    Style="{StaticResource btn}"
    ToolTip="Close">
                        Close
                    </Button>
                </StackPanel>

            </StackPanel>

        </xctk:ChildWindow>
        <xctk:ChildWindow Padding="20" Panel.ZIndex="1"   CloseButtonVisibility="Collapsed"  BorderThickness="0"    WindowBorderBrush="White" Visibility="Collapsed"   Name="childDeleteConfirmation" WindowStartupLocation="Center" IsModal="True"    WindowState="Open"
                   
                    >


            <StackPanel Margin="20">
                <TextBlock Style="{StaticResource Title}" FontSize="14" Foreground="Black" Name="txtDelete" Margin="5"  Text="Are you sure you want to delete?"></TextBlock>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="Yes" Name="btnDeleteOk" Click="btnDeleteOk_Click" HorizontalContentAlignment="Center" Height="25" HorizontalAlignment="Right" Margin="10" 
    Style="{StaticResource btn}"
    ToolTip="Yes">

                    </Button>
                    <Button   HorizontalAlignment="Center" Margin="10" Name="btnDeleteClose" Click="btnDeleteClose_Click"
    Style="{StaticResource btn}"
    ToolTip="No">
                        No
                    </Button>
                </StackPanel>

            </StackPanel>

        </xctk:ChildWindow>

        <xctk:ChildWindow Padding="20" Panel.ZIndex="5000"   CloseButtonVisibility="Collapsed"  BorderThickness="0"    WindowBorderBrush="White" Visibility="Collapsed"   Name="childMoveConfirmation" WindowStartupLocation="Center" IsModal="True"    WindowState="Open"
                   
                    >


            <StackPanel Margin="20">
                <TextBlock Style="{StaticResource Title}" FontSize="14" Foreground="Black" Name="txtMove" Margin="5"  Text=""></TextBlock>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="Yes" Name="btnMoveOk" Click="BtnMoveOk_Click" HorizontalContentAlignment="Center" Height="25" HorizontalAlignment="Right" Margin="10" 
    Style="{StaticResource btn}"
    ToolTip="Yes">

                    </Button>
                    <Button   HorizontalAlignment="Center" Margin="10" Name="btnMoveClose" Click="BtnMoveClose_Click"
    Style="{StaticResource btn}"
    ToolTip="No">
                        No
                    </Button>
                </StackPanel>

            </StackPanel>

        </xctk:ChildWindow>

        
    </Grid>


</UserControl>
